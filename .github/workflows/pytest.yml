# This workflow will set up Apache Pulsar in Docker, install an FTP server with anonymous access,
# install other Python dependencies, and run tests.

name: pytest

on:
  push:
    branches: [ pulsar ]
  pull_request:
    branches: [ pulsar ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9']

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Set up docker for Apache Pulsar
      run: docker run -d --name pulsar -p 6650:6650  -p 8080:8080 --mount source=pulsardata,target=/pulsar/data --mount source=pulsarconf,target=/pulsar/conf apachepulsar/pulsar:2.9.1 bin/pulsar standalone ; sleep 30
    - name: Install vsftpd
      run: |
        sudo apt install -y vsftpd
        sudo sed -i 's/anonymous_enable=NO/anonymous_enable=YES/' /etc/vsftpd.conf
        sudo sed -i 's/#write_enable=YES/write_enable=YES/' /etc/vsftpd.conf
        echo 'anon_other_write_enable=YES' | sudo tee -a /etc/vsftpd.conf > /dev/null
        sudo mkdir /srv/ftp/files
        sudo chown root:ftp /srv/ftp/files
        sudo chmod go+w /srv/ftp/files
        sudo systemctl restart vsftpd.service
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest wheel
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --exit-zero --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pip install .
        python edgeserve/worker.py pulsar://localhost:6650 code-raw &
        python edgeserve/worker.py pulsar://localhost:6650 code-ftp true false /srv/ftp/ &
        python edgeserve/worker.py pulsar://localhost:6650 code-ftp-memory true true /srv/ftp/ &
        pytest
